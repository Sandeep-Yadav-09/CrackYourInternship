int firstOcc(vector<int>& arr, int n, int key)
{
	int start=0,end=n-1,mid,ans=-1;
	while(start<=end)
	{
		mid=start+(end-start)/2;
		if(arr[mid]==key)
		{
			ans=mid;
			end=mid-1;
		}
		else if(arr[mid]<key)
		{
			start=mid+1;
		}
		else if(arr[mid]>key)
		{
			end=mid-1;
		}
	}
	return ans;
}
int lastOcc(vector<int>& arr, int n, int key)
{
	int start=0,end=n-1,mid,ans=-1;
	while(start<=end)
	{
		mid=start+(end-start)/2;
		if(arr[mid]==key)
		{
			ans=mid;
			start=mid+1;
		}
		else if(arr[mid]<key)
		{
			start=mid+1;
		}
		else if(arr[mid]>key)
		{
			end=mid-1;
		}
	}
	return ans;
}

pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int key)
{
    // Write your code here
	int start=0,end=n-1,mid;
	pair<int ,int >ans;
	ans.first=firstOcc(arr,n,key);
	ans.second=lastOcc(arr,n,key);
	return ans;
}
