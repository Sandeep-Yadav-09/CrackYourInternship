int getPivot(vector<int>& arr,int n)
{
	int mid,s=0,e=n-1;
	while(s<e)
	{
		mid=s+(e-s)/2;
		if(arr[0]<=arr[mid])
		{
			s=mid+1;
		}
		else
			e=mid;
	}
	return s;
}

int binarySearch(vector<int>& arr, int s,int e, int key)
{
	while(s<=e)
	{
		int mid=s+(e-s)/2;
		if(arr[mid]==key)
			return mid;
		else if(arr[mid]>key)
			e=mid-1;
		else s=mid+1;
	}
	return -1;
}

int findPosition(vector<int>& arr, int n, int k)
{
    // Write your code here.
    // Return the position of K in ARR else return -1.
	int pivot = getPivot(arr, n);
    if( k >= arr[pivot] && k <= arr[n-1])
        return binarySearch(arr, pivot, n-1, k);
    else
        return binarySearch(arr, 0, pivot - 1, k);
}

